---
// Main API Reference router that embeds the selected renderer in an iframe
const title = 'API Reference';
const description = 'Interactive API documentation for the Cyoda platform';

// Configuration: Choose your API documentation renderer
// Options: 'scalar' | 'stoplight'
const API_RENDERER = 'scalar';  // Change this to 'stoplight' to use Stoplight Elements

// Build iframe URL based on renderer selection
const getIframeUrl = (renderer: string) => {
  switch (renderer) {
    case 'stoplight':
      return '/api-reference-stoplight/';
    case 'scalar':
    default:
      return '/api-reference-scalar/?theme=light&layout=modern&showSidebar=true';
  }
};

const iframeUrl = getIframeUrl(API_RENDERER);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title} | Cyoda Documentation</title>
    <meta name="description" content={description} />
    <link rel="icon" href="/favicon.svg" sizes="any" />
    
    <style>
      body {
        margin: 0;
        padding: 0;
        font-family: system-ui, sans-serif;
        background: #ffffff;
        color: #24292f;
      }

      .header {
        background: hsl(224, 19%, 97%);
        border-bottom: 1px solid #e1e4e8;
        padding: 1rem 2rem;
        display: flex;
        align-items: center;
        position: sticky;
        top: 0;
        z-index: 100;
      }

      .site-title {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        text-decoration: none;
        color: #4FB8B0;
        font-weight: 600;
        font-size: 1.25rem;
        transition: opacity 0.2s ease;
        margin: 0;
      }

      .site-title:hover {
        opacity: 0.8;
      }

      .site-logo {
        flex-shrink: 0;
        border-radius: 4px;
        width: 32px;
        height: 32px;
      }

      .site-title-text {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      /* Responsive adjustments */
      @media (max-width: 50rem) {
        .site-title {
          font-size: 1.125rem;
          gap: 0.5rem;
        }

        .site-logo {
          width: 28px;
          height: 28px;
        }
      }
      
      .iframe-container {
        position: relative;
        width: 100%;
        height: calc(100vh - 80px); /* Subtract header height */
        background: white;
      }
      
      .api-iframe {
        width: 100%;
        height: 100%;
        border: none;
        display: block;
      }
      
      .loading-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: white;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10;
        transition: opacity 0.3s ease;
      }
      
      .loading-overlay.hidden {
        opacity: 0;
        pointer-events: none;
      }
      
      .loading-spinner {
        width: 40px;
        height: 40px;
        border: 3px solid #e1e5e9;
        border-top: 3px solid #059669;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }
      
      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
      
      .error-message {
        display: none;
        padding: 2rem;
        text-align: center;
        color: #dc2626;
        background: #fef2f2;
        border: 1px solid #fecaca;
        border-radius: 0.5rem;
        margin: 2rem;
      }
      

    </style>
  </head>
  <body>
    <!-- Header with navigation -->
    <header class="header">
      <a href="/" class="site-title">
        <img
          src="/favicon.svg"
          alt="Cyoda Logo"
          class="site-logo"
        />
        <span class="site-title-text">Cyoda Documentation</span>
      </a>
    </header>

    <!-- Main content with iframe -->
    <main class="iframe-container">
      <div class="loading-overlay" id="loading-overlay">
        <div class="loading-spinner"></div>
      </div>
      
      <div class="error-message" id="error-message">
        <h3>Failed to load API reference</h3>
        <p>Please try refreshing the page or <a href={iframeUrl} target="_blank">open in a new tab</a>.</p>
      </div>
      
      <iframe
        id="api-iframe"
        class="api-iframe"
        src={iframeUrl}
        title="API Reference Documentation"
        loading="lazy"
        sandbox="allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox"
      ></iframe>
    </main>

    <script>
      // Handle iframe loading states
      const iframe = document.getElementById('api-iframe');
      const loadingOverlay = document.getElementById('loading-overlay');
      const errorMessage = document.getElementById('error-message');
      
      let loadTimeout;
      
      // Show loading state initially
      loadingOverlay.style.display = 'flex';
      
      // Set a timeout for loading
      loadTimeout = setTimeout(() => {
        loadingOverlay.style.display = 'none';
        errorMessage.style.display = 'block';
        console.error('API reference iframe failed to load within timeout');
      }, 10000); // 10 second timeout
      
      // Handle successful load
      iframe.addEventListener('load', () => {
        clearTimeout(loadTimeout);
        loadingOverlay.classList.add('hidden');
        
        // Hide loading overlay after transition
        setTimeout(() => {
          loadingOverlay.style.display = 'none';
        }, 300);
      });
      
      // Handle load errors
      iframe.addEventListener('error', () => {
        clearTimeout(loadTimeout);
        loadingOverlay.style.display = 'none';
        errorMessage.style.display = 'block';
        console.error('API reference iframe failed to load');
      });
      
      // Optional: Handle iframe communication for dynamic resizing
      window.addEventListener('message', (event) => {
        // Only accept messages from same origin for security
        if (event.origin !== window.location.origin) return;
        
        if (event.data.type === 'resize' && event.data.height) {
          iframe.style.height = event.data.height + 'px';
        }
      });
      
      // Handle browser back/forward navigation
      window.addEventListener('popstate', () => {
        // Reload iframe if needed for navigation consistency
        if (iframe.contentWindow) {
          iframe.contentWindow.location.reload();
        }
      });
    </script>
  </body>
</html>
