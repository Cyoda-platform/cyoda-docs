---
import config from 'virtual:starlight/user-config';

import LanguageSelect from 'virtual:starlight/components/LanguageSelect';
import Search from 'virtual:starlight/components/Search';
import SiteTitle from 'virtual:starlight/components/SiteTitle';
import SocialIcons from 'virtual:starlight/components/SocialIcons';
import ThemeSelect from 'virtual:starlight/components/ThemeSelect';

/**
 * Render the `Search` component if Pagefind is enabled or the default search component has been overridden.
 */
const shouldRenderSearch =
	config.pagefind || config.components.Search !== '@astrojs/starlight/components/Search.astro';
---

<div class="header">
	<div class="title-wrapper sl-flex">
		<SiteTitle />
	</div>
	<div class="nav-links sl-flex">
		<a href="/" class="nav-link">Docs</a>
		<div class="dropdown">
			<button class="nav-link dropdown-toggle" aria-expanded="false">
				API
				<svg class="dropdown-arrow" width="12" height="12" viewBox="0 0 12 12" fill="currentColor">
					<path d="M6 8.5L2.5 5h7L6 8.5z"/>
				</svg>
			</button>
			<div class="dropdown-menu">
				<a href="/api-reference-scalar/" class="dropdown-item">
					<span class="dropdown-label">Scalar</span>
					<span class="dropdown-desc">Modern, interactive</span>
				</a>
				<a href="/api-reference-stoplight/" class="dropdown-item">
					<span class="dropdown-label">Stoplight Elements</span>
					<span class="dropdown-desc">Professional, traditional</span>
				</a>
			</div>
		</div>
	</div>
	<div class="sl-flex print:hidden">
		{shouldRenderSearch && <Search />}
	</div>
	<div class="sl-hidden md:sl-flex print:hidden right-group">
		<div class="sl-flex social-icons">
			<SocialIcons />
		</div>
		<ThemeSelect />
		<LanguageSelect />
	</div>
</div>

<style>
	@layer starlight.core {
		.header {
			display: flex;
			gap: var(--sl-nav-gap);
			justify-content: space-between;
			align-items: center;
			height: 100%;
		}

		.title-wrapper {
			/* Prevent long titles overflowing and covering the search and menu buttons on narrow viewports. */
			overflow: clip;
			/* Avoid clipping focus ring around link inside title wrapper. */
			padding: 0.25rem;
			margin: -0.25rem;
			min-width: 0;
		}

		.nav-links {
			gap: 1rem;
			align-items: center;
		}

		.nav-link {
			color: var(--sl-color-gray-2);
			text-decoration: none;
			font-weight: 500;
			padding: 0.5rem 1rem;
			border-radius: 0.25rem;
			transition: color 0.2s ease;
		}

		.nav-link:hover,
		.nav-link:focus {
			color: var(--sl-color-white);
		}

		.nav-link[aria-current="page"] {
			color: var(--sl-color-text-accent);
			font-weight: 600;
		}

		/* Dropdown Styles */
		.dropdown {
			position: relative;
			display: inline-block;
		}

		.dropdown-toggle {
			display: flex;
			align-items: center;
			gap: 0.5rem;
			background: none;
			border: none;
			cursor: pointer;
			transition: all 0.2s ease;
		}

		.dropdown-arrow {
			transition: transform 0.2s ease;
		}

		.dropdown:hover .dropdown-arrow {
			transform: rotate(180deg);
		}

		.dropdown-menu {
			position: absolute;
			top: 100%;
			right: 0;
			background: var(--sl-color-bg-nav);
			border: 1px solid var(--sl-color-gray-5);
			border-radius: 0.5rem;
			box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
			min-width: 220px;
			opacity: 0;
			visibility: hidden;
			transform: translateY(-10px);
			transition: all 0.2s ease;
			z-index: 1000;
		}

		.dropdown:hover .dropdown-menu {
			opacity: 1;
			visibility: visible;
			transform: translateY(0);
		}

		.dropdown-item {
			display: block;
			padding: 0.75rem 1rem;
			color: var(--sl-color-gray-2);
			text-decoration: none;
			border-bottom: 1px solid var(--sl-color-gray-6);
			transition: background-color 0.2s ease;
		}

		.dropdown-item:last-child {
			border-bottom: none;
		}

		.dropdown-item:hover {
			background: var(--sl-color-gray-6);
			color: var(--sl-color-white);
		}

		.dropdown-label {
			display: block;
			font-weight: 600;
			font-size: 0.9rem;
		}

		.dropdown-desc {
			display: block;
			font-size: 0.75rem;
			color: var(--sl-color-gray-3);
			margin-top: 0.125rem;
		}

		.right-group,
		.social-icons {
			gap: 1rem;
			align-items: center;
		}
		.social-icons::after {
			content: '';
			height: 2rem;
			border-inline-end: 1px solid var(--sl-color-gray-5);
		}

		@media (min-width: 50rem) {
			:global(:root[data-has-sidebar]) {
				--__sidebar-pad: calc(2 * var(--sl-nav-pad-x));
			}
			:global(:root:not([data-has-toc])) {
				--__toc-width: 0rem;
			}
			.header {
				--__sidebar-width: max(0rem, var(--sl-content-inline-start, 0rem) - var(--sl-nav-pad-x));
				--__main-column-fr: calc(
					(
							100% + var(--__sidebar-pad, 0rem) - var(--__toc-width, var(--sl-sidebar-width)) -
							(2 * var(--__toc-width, var(--sl-nav-pad-x))) - var(--sl-content-inline-start, 0rem) -
							var(--sl-content-width)
						) / 2
				);
				display: grid;
				grid-template-columns:
        /* 1 (site title): runs up until the main content column's left edge or the width of the title, whichever is the largest  */
					minmax(
						calc(var(--__sidebar-width) + max(0rem, var(--__main-column-fr) - var(--sl-nav-gap))),
						auto
					)
					/* 2 (nav links): space for navigation */
					auto
					/* 3 (search box): all free space that is available. */
					1fr
					/* 4 (right items): use the space that these need. */
					auto;
				align-content: center;
			}
		}

		@media (max-width: 49.9rem) {
			.nav-links {
				display: none;
			}
		}
	}
</style>
