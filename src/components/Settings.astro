---
// Settings component that provides theme selection and API renderer preference
// Follows Astro/Starlight best practices for component composition
---

<div class="settings-dropdown">
  <button
    class="settings-button"
    aria-expanded="false"
    aria-haspopup="true"
    aria-label="Settings"
    data-settings-toggle
  >
    <svg class="settings-icon" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
      <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
      <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
    </svg>
    <span class="settings-text">Settings</span>
    <svg class="dropdown-arrow" width="12" height="12" viewBox="0 0 12 12" fill="currentColor">
      <path d="M6 8.5L2.5 5h7L6 8.5z"/>
    </svg>
  </button>

  <div class="settings-menu" data-settings-menu>
    <div class="settings-header">
      <span class="settings-title">Settings</span>
      <button class="settings-close" data-settings-close aria-label="Close settings">
        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
          <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z"/>
        </svg>
      </button>
    </div>
    <div class="settings-section">
      <label class="settings-label">Theme</label>
      <div class="settings-options">
        <button class="settings-option" data-theme-option="auto" data-theme="auto">
          <svg class="option-icon" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
            <path d="M8 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z"/>
          </svg>
          Auto
        </button>
        <button class="settings-option" data-theme-option="light" data-theme="light">
          <svg class="option-icon" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
            <path d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z"/>
          </svg>
          Light
        </button>
        <button class="settings-option" data-theme-option="dark" data-theme="dark">
          <svg class="option-icon" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
            <path d="M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278zM4.858 1.311A7.269 7.269 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.316 7.316 0 0 0 5.205-2.162c-.337.042-.68.063-1.029.063-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286z"/>
          </svg>
          Dark
        </button>
      </div>
    </div>

    <div class="settings-divider"></div>

    <div class="settings-section">
      <label class="settings-label">API Reference</label>
      <div class="settings-options">
        <button class="settings-option" data-api-option="scalar" data-api-renderer="scalar">
          <svg class="option-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
            <circle cx="9" cy="9" r="2"></circle>
            <path d="M21 15.5c-1.5-1.5-4-1.5-5.5 0"></path>
            <path d="M12 12l-2 2"></path>
          </svg>
          Scalar
        </button>
        <button class="settings-option" data-api-option="stoplight" data-api-renderer="stoplight">
          <svg class="option-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="12" cy="12" r="10"></circle>
            <circle cx="12" cy="12" r="6"></circle>
            <circle cx="12" cy="12" r="2"></circle>
          </svg>
          Stoplight
        </button>
      </div>
    </div>
  </div>
</div>

<style>
  .settings-dropdown {
    position: relative;
    display: inline-block;
  }

  .settings-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: none;
    border: none;
    color: var(--sl-color-gray-2);
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.375rem;
    transition: all 0.2s ease;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .settings-button:hover,
  .settings-button:focus {
    color: var(--sl-color-white);
    background: var(--sl-color-gray-6);
  }

  .settings-button[aria-expanded="true"] {
    color: var(--sl-color-white);
    background: var(--sl-color-gray-6);
  }

  .settings-icon {
    flex-shrink: 0;
  }

  .settings-text {
    white-space: nowrap;
  }

  .dropdown-arrow {
    transition: transform 0.2s ease;
    flex-shrink: 0;
  }

  .settings-button[aria-expanded="true"] .dropdown-arrow {
    transform: rotate(180deg);
  }

  .settings-menu {
    position: absolute;
    top: 100%;
    right: 0;
    background: var(--sl-color-bg-nav);
    border: 1px solid var(--sl-color-gray-5);
    border-radius: 0.5rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    min-width: 200px;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.2s ease;
    z-index: 1000;
    padding: 0.75rem;
  }

  .settings-dropdown[data-open] .settings-menu {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .settings-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0.75rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--sl-color-gray-5);
  }

  .settings-title {
    font-weight: 600;
    color: var(--sl-color-white);
    font-size: 0.875rem;
  }

  .settings-close {
    background: none;
    border: none;
    color: var(--sl-color-gray-3);
    cursor: pointer;
    padding: 0.25rem;
    border-radius: 0.25rem;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .settings-close:hover,
  .settings-close:focus {
    color: var(--sl-color-white);
    background: var(--sl-color-gray-6);
  }

  .settings-section {
    margin-bottom: 0.75rem;
  }

  .settings-section:last-child {
    margin-bottom: 0;
  }

  .settings-label {
    display: block;
    font-size: 0.75rem;
    font-weight: 600;
    color: var(--sl-color-gray-3);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 0.5rem;
  }

  .settings-options {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .settings-option {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: none;
    border: none;
    color: var(--sl-color-gray-2);
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.25rem;
    transition: all 0.2s ease;
    font-size: 0.875rem;
    text-align: left;
    width: 100%;
  }

  .settings-option:hover {
    background: var(--sl-color-gray-6);
    color: var(--sl-color-white);
  }

  .settings-option.active {
    background: var(--sl-color-accent-low);
    color: var(--sl-color-accent);
  }

  .option-icon {
    flex-shrink: 0;
  }

  .settings-divider {
    height: 1px;
    background: var(--sl-color-gray-5);
    margin: 0.75rem 0;
  }

  /* Responsive adjustments */
  @media (max-width: 50rem) {
    .settings-text {
      display: none;
    }

    .settings-menu {
      right: -50px;
      min-width: 180px;
    }
  }
</style>

<script>
  import { settingsManager } from '../utils/settings.ts';

  // Settings UI controller
  class SettingsUI {
    constructor() {
      this.settingsManager = settingsManager;
      this.init();
    }

    init() {
      this.setupEventListeners();
      this.loadSettings();
      this.updateActiveStates();
    }

    setupEventListeners() {
      const toggle = document.querySelector('[data-settings-toggle]');
      const menu = document.querySelector('[data-settings-menu]');
      const dropdown = document.querySelector('.settings-dropdown');

      if (!toggle || !menu || !dropdown) return;

      // Toggle dropdown
      toggle.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        this.toggleDropdown(dropdown, toggle);
      });

      // Close button
      const closeButton = document.querySelector('[data-settings-close]');
      if (closeButton) {
        closeButton.addEventListener('click', (e) => {
          e.preventDefault();
          e.stopPropagation();
          this.closeDropdown(dropdown, toggle);
        });
      }

      // ESC key to close dropdown
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && dropdown.hasAttribute('data-open')) {
          this.closeDropdown(dropdown, toggle);
        }
      });

      // Close dropdown when clicking outside
      document.addEventListener('click', (e) => {
        if (!dropdown.contains(e.target)) {
          this.closeDropdown(dropdown, toggle);
        }
      });

      // Theme selection
      const themeOptions = document.querySelectorAll('[data-theme-option]');
      themeOptions.forEach(option => {
        option.addEventListener('click', (e) => {
          e.preventDefault();
          const theme = option.dataset.themeOption;
          this.settingsManager.setTheme(theme);
          this.updateActiveStates();
        });
      });

      // API renderer selection
      const apiOptions = document.querySelectorAll('[data-api-option]');
      apiOptions.forEach(option => {
        option.addEventListener('click', (e) => {
          e.preventDefault();
          const renderer = option.dataset.apiOption;
          this.settingsManager.setApiRenderer(renderer);
          this.updateActiveStates();
        });
      });
    }

    toggleDropdown(dropdown, toggle) {
      const isOpen = dropdown.hasAttribute('data-open');
      if (isOpen) {
        this.closeDropdown(dropdown, toggle);
      } else {
        this.openDropdown(dropdown, toggle);
      }
    }

    openDropdown(dropdown, toggle) {
      dropdown.setAttribute('data-open', '');
      toggle.setAttribute('aria-expanded', 'true');
    }

    closeDropdown(dropdown, toggle) {
      dropdown.removeAttribute('data-open');
      toggle.setAttribute('aria-expanded', 'false');
    }

    loadSettings() {
      const theme = this.settingsManager.getTheme();
      if (theme !== 'auto') {
        this.settingsManager.setTheme(theme);
      }
    }

    updateActiveStates() {
      const currentTheme = this.settingsManager.getTheme();
      const currentRenderer = this.settingsManager.getApiRenderer();

      // Update theme options
      document.querySelectorAll('[data-theme-option]').forEach(option => {
        option.classList.toggle('active', option.dataset.themeOption === currentTheme);
      });

      // Update API renderer options
      document.querySelectorAll('[data-api-option]').forEach(option => {
        option.classList.toggle('active', option.dataset.apiOption === currentRenderer);
      });
    }
  }

  // Initialize settings UI when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => new SettingsUI());
  } else {
    new SettingsUI();
  }

  // Re-initialize on navigation (for SPA-like behavior)
  document.addEventListener('astro:page-load', () => new SettingsUI());
</script>
